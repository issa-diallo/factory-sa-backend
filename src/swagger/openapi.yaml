openapi: 3.0.0
info:
  title: Factory Backend API
  version: 1.0.0
  description: API pour la gestion des entreprises, domaines, utilisateurs et packing lists
servers:
  - url: http://localhost:3001
    description: Development server

paths:
  # ==================== AUTHENTICATION ====================
  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticates a user with email/password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: |
        Logs out the user by invalidating the token and session.
        Requires a valid JWT token in the Authorization header with the format:
        "Bearer <token>"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        '400':
          description: Missing or malformed Authorization header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '401':
          description: Authentication failed - invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ==================== COMPANY ====================
  /api/v1/companies:
    post:
      tags:
        - Company
      summary: Create a new company
      description: |
        Creates a new company.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequest'
      responses:
        '201':
          description: Company created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Company
      summary: Get companies
      description: |
        Retrieves companies based on user permissions.
        Access restrictions apply based on user role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Companies retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/companies/current:
    get:
      tags:
        - Company
      summary: Get current user's company
      description: |
        Retrieves the company associated with the current user.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Company retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/companies/{id}:
    get:
      tags:
        - Company
      summary: Get company by ID
      description: |
        Retrieves a specific company by its ID.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Company ID
      responses:
        '200':
          description: Company retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Company
      summary: Update a company
      description: |
        Updates an existing company.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Company ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequest'
      responses:
        '200':
          description: Company updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Company
      summary: Delete a company
      description: |
        Deletes a company.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Company ID
      responses:
        '200':
          description: Company deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ==================== DOMAIN ====================
  /api/v1/domains:
    post:
      tags:
        - Domain
      summary: Create a new domain
      description: |
        Creates a new domain.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      responses:
        '201':
          description: Domain created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Domain
      summary: Retrieve all domains
      description: |
        Retrieves all available domains.
        Access restrictions apply based on the user's role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Domains retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/domains/{id}:
    get:
      tags:
        - Domain
      summary: Retrieve a domain by ID
      description: |
        Retrieves a specific domain by its ID.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Domain ID
      responses:
        '200':
          description: Domain retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Domain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Domain
      summary: Update a domain
      description: |
        Updates an existing domain.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Domain ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
      responses:
        '200':
          description: Domain updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Domain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Domain
      summary: Delete a domain
      description: |
        Deletes a domain.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Domain ID
      responses:
        '204':
          description: Domain deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Domain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/domains/company-domain:
    post:
      tags:
        - Domain
      summary: Create a company-domain association
      description: |
        Creates an association between a company and a domain.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyDomainRequest'
      responses:
        '201':
          description: Association created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDomainResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/domains/company/{companyId}/domain/{domainId}:
    delete:
      tags:
        - Domain
      summary: Delete a company-domain association
      description: |
        Deletes an association between a company and a domain.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
          description: Company ID
        - name: domainId
          in: path
          required: true
          schema:
            type: string
          description: Domain ID
      responses:
        '204':
          description: Association deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Association not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/domains/company/{companyId}/domains:
    get:
      tags:
        - Domain
      summary: Get company domains
      description: |
        Retrieves all domains associated with a specific company.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
          description: Company ID
      responses:
        '200':
          description: Domains retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDomainListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ==================== PERMISSION ====================
  /api/v1/permissions:
    post:
      tags:
        - Permission
      summary: Create a new permission
      description: |
        Creates a new permission.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Permission
      summary: Retrieve all permissions
      description: |
        Retrieves all available permissions.
        Access restrictions apply based on the user's role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/permissions/{id}:
    get:
      tags:
        - Permission
      summary: Retrieve a permission by ID
      description: |
        Retrieves a specific permission by its ID.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Permission ID
      responses:
        '200':
          description: Permission retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Permission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Permission
      summary: Update a permission
      description: |
        Updates an existing permission.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Permission ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Permission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Permission
      summary: Delete a permission
      description: |
        Deletes a permission.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Permission ID
      responses:
        '204':
          description: Permission deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Permission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/permissions/role-permission:
    post:
      tags:
        - Permission
      summary: Create a role-permission association
      description: |
        Creates an association between a role and a permission.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRolePermissionRequest'
      responses:
        '201':
          description: Association created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermissionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/permissions/role-permission/{id}:
    delete:
      tags:
        - Permission
      summary: Delete a role-permission association
      description: |
        Deletes an association between a role and a permission.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Role-Permission association ID
      responses:
        '204':
          description: Association deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Association not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ==================== ROLE ====================
  /api/v1/roles:
    post:
      tags:
        - Role
      summary: Create a new role
      description: |
        Creates a new role.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Role
      summary: Retrieve all roles
      description: |
        Retrieves all available roles.
        Access restrictions apply based on the user's role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Roles retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/roles/{id}:
    get:
      tags:
        - Role
      summary: Retrieve a role by ID
      description: |
        Retrieves a specific role by its ID.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Role ID
      responses:
        '200':
          description: Role retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Role
      summary: Update a role
      description: |
        Updates an existing role.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Role ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
      responses:
        '200':
          description: Role updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Role
      summary: Delete a role
      description: |
        Deletes a role.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Role ID
      responses:
        '204':
          description: Role deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ==================== USER MANAGEMENT ====================
  /api/v1/users:
    post:
      tags:
        - User Management
      summary: Create a new user
      description: |
        Creates a new user with automatic company assignment.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - User Management
      summary: Retrieve all users
      description: |
        Retrieves all users with company filtering.
        Access restrictions apply based on user role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/me:
    get:
      tags:
        - User Management
      summary: Get current user profile
      description: |
        Retrieves the profile of the currently logged-in user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - User Management
      summary: Update own profile
      description: |
        Updates the profile of the currently logged-in user.
        Limited to specific fields (firstName, lastName, email).
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOwnProfileRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/me/password:
    put:
      tags:
        - User Management
      summary: Change own password
      description: |
        Changes the password of the currently logged-in user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{id}:
    get:
      tags:
        - User Management
      summary: Get user by ID
      description: |
        Retrieves a specific user by their ID.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - User Management
      summary: Update a user
      description: |
        Updates an existing user.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - User Management
      summary: Delete a user
      description: |
        Deletes a user.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '204':
          description: User deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{id}/roles:
    get:
      tags:
        - User Management
      summary: Get user roles
      description: |
        Retrieves the roles of a specific user.
        Requires appropriate access permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User roles retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/user-role:
    post:
      tags:
        - User Management
      summary: Create a user-role association
      description: |
        Creates an association between a user and a role.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRoleRequest'
      responses:
        '201':
          description: Association created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/user-role/{id}:
    delete:
      tags:
        - User Management
      summary: Delete a user-role association
      description: |
        Deletes an association between a user and a role.
        Requires appropriate administrative permissions.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User-Role association ID
      responses:
        '204':
          description: Association deleted successfully
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Association not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ==================== PACKING LIST ====================
  /api/v1/packing-list:
    post:
      tags:
        - Packing List
      summary: Process packing list data
      description: |
        Processes and validates packing list data rows.
        Requires appropriate permissions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingListRequest'
      responses:
        '200':
          description: Packing list processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingListSuccessResponse'
        '400':
          description: Validation errors in packing list data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingListValidationError'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # ==================== AUTH SCHEMAS ====================
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          minLength: 6
          description: Password (minimum 6 characters)

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Authentication JWT token
        user:
          $ref: '#/components/schemas/User'

    LogoutResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Logout successful'

    # ==================== ERROR SCHEMAS ====================
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur descriptif

    AuthErrorResponse:
      type: object
      properties:
        message:
          type: string
          enum:
            - 'Authentication required'
            - 'Invalid token'
            - 'Missing token'
          description: Message d'erreur d'authentification

    # ==================== USER SCHEMAS ====================
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
        email:
          type: string
          format: email
          description: User's email address
        firstName:
          type: string
          nullable: true
          description: User's first name
        lastName:
          type: string
          nullable: true
          description: User's last name

    # ==================== PACKING LIST SCHEMAS ====================
    PackingListRequest:
      type: array
      items:
        $ref: '#/components/schemas/PackingListRow'
      description: Array of packing list rows to process

    PackingListRow:
      type: object
      properties:
        LINE:
          type: number
          description: Line number
        'SKU MIN':
          type: string
          nullable: true
          description: SKU code
        MAKE:
          type: string
          nullable: true
          description: Manufacturer
        MODEL:
          type: string
          description: Model name
        'DESCRIPTION MIN':
          type: string
          description: Product description
        'QTY REQ MATCH':
          type: number
          nullable: true
          description: Required quantity
        'QTY ALLOC':
          type: number
          nullable: true
          description: Allocated quantity
        ORIGIN:
          type: string
          nullable: true
          description: Origin country
        EAN:
          type: number
          nullable: true
          description: EAN code
        PAL:
          type: number
          nullable: true
          description: Pallet number
        CTN:
          type: string
          description: Carton number
        QTY:
          type: number
          description: Quantity

    PackingListSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProcessedItem'
        summary:
          $ref: '#/components/schemas/PackingListSummary'

    PackingListValidationError:
      type: object
      properties:
        error:
          type: string
          example: 'Validation error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationErrorDetail'
        summary:
          $ref: '#/components/schemas/ValidationSummary'

    ValidationErrorDetail:
      type: object
      properties:
        line:
          type: number
          description: Line number with error
        field:
          type: string
          description: Field name with error
        error:
          type: string
          description: Error message
        receivedValue:
          type: string
          nullable: true
          description: Received value
        expectedValue:
          type: string
          nullable: true
          description: Expected value
        code:
          type: string
          description: Error code

    ValidationSummary:
      type: object
      properties:
        errorCount:
          type: number
          description: Total number of errors
        errorLines:
          type: array
          items:
            type: number
          description: List of line numbers with errors

    PackingListSummary:
      type: object
      properties:
        totalRows:
          type: number
          description: Total number of rows processed
        processedRows:
          type: number
          description: Number of successfully processed rows
        totalPcs:
          type: number
          description: Total number of pieces

    ProcessedItem:
      type: object
      properties:
        line:
          type: number
          description: Original line number
        ctn:
          type: string
          description: Carton number
        qty:
          type: number
          description: Quantity
        model:
          type: string
          description: Model name
        description:
          type: string
          description: Product description

    # ==================== PERMISSION SCHEMAS ====================
    CreatePermissionRequest:
      type: object
      required:
        - name
        - code
      properties:
        name:
          type: string
          description: Permission name
        code:
          type: string
          description: Permission code (unique identifier)
        description:
          type: string
          nullable: true
          description: Permission description

    UpdatePermissionRequest:
      type: object
      properties:
        name:
          type: string
          description: Permission name
        description:
          type: string
          nullable: true
          description: Permission description

    PermissionResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the permission
        name:
          type: string
          description: Permission name
        code:
          type: string
          description: Permission code
        description:
          type: string
          nullable: true
          description: Permission description
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    PermissionListResponse:
      type: array
      items:
        $ref: '#/components/schemas/PermissionResponse'

    # ==================== ROLE SCHEMAS ====================
    CreateRoleRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Role name
        description:
          type: string
          nullable: true
          description: Role description
        isDefault:
          type: boolean
          default: false
          description: Whether this is a default role

    UpdateRoleRequest:
      type: object
      properties:
        name:
          type: string
          description: Role name
        description:
          type: string
          nullable: true
          description: Role description
        isDefault:
          type: boolean
          description: Whether this is a default role

    RoleResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the role
        name:
          type: string
          description: Role name
        description:
          type: string
          nullable: true
          description: Role description
        isDefault:
          type: boolean
          description: Whether this is a default role
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    RoleListResponse:
      type: array
      items:
        $ref: '#/components/schemas/RoleResponse'

    # ==================== USER MANAGEMENT SCHEMAS ====================
    CreateUserRequest:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          minLength: 6
          description: Password (minimum 6 characters)
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        companyId:
          type: string
          nullable: true
          description: Company ID for user assignment

    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        isActive:
          type: boolean
          description: Whether the user is active

    UpdateOwnProfileRequest:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address

    ChangePasswordRequest:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          description: Current password
        newPassword:
          type: string
          minLength: 6
          description: New password (minimum 6 characters)

    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
        email:
          type: string
          format: email
          description: User's email address
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        isActive:
          type: boolean
          description: Whether the user is active
        companyId:
          type: string
          nullable: true
          description: Company ID
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    UserListResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'

    # ==================== ASSOCIATION SCHEMAS ====================
    CreateCompanyDomainRequest:
      type: object
      required:
        - companyId
        - domainId
      properties:
        companyId:
          type: string
          description: Company ID
        domainId:
          type: string
          description: Domain ID

    CompanyDomainResponse:
      type: object
      properties:
        id:
          type: string
          description: Association ID
        companyId:
          type: string
          description: Company ID
        domainId:
          type: string
          description: Domain ID
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp

    CompanyDomainListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CompanyDomainResponse'
      description: List of company-domain associations

    CreateRolePermissionRequest:
      type: object
      required:
        - roleId
        - permissionId
      properties:
        roleId:
          type: string
          description: Role ID
        permissionId:
          type: string
          description: Permission ID

    RolePermissionResponse:
      type: object
      properties:
        id:
          type: string
          description: Association ID
        roleId:
          type: string
          description: Role ID
        permissionId:
          type: string
          description: Permission ID
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp

    CreateUserRoleRequest:
      type: object
      required:
        - userId
        - roleId
      properties:
        userId:
          type: string
          description: User ID
        roleId:
          type: string
          description: Role ID

    UserRoleResponse:
      type: object
      properties:
        id:
          type: string
          description: Association ID
        userId:
          type: string
          description: User ID
        roleId:
          type: string
          description: Role ID
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          description: Success message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
